# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- monorepo

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'macosx'
      configuration: 'Release'
      xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
      xcodeVersion: '10'
- job: iOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'iphoneos'
      configuration: 'Release'
      xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
      xcodeVersion: '10'
- job: tvOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'appletvos'
      configuration: 'Release'
      xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
      xcodeVersion: '10'
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: sudo apt-get install clang libicu-dev
  - script: curl https://swift.org/builds/swift-4.2.1-release/ubuntu1604/swift-4.2.1-RELEASE/swift-4.2.1-RELEASE-ubuntu16.04.tar.gz > $(Build.SourcesDirectory)/swift-4.2.1-RELEASE-ubuntu16.04.tar.gz
  - script: tar xzf swift-4.2.1-ubuntu16.04.tar.gz -C $(Build.SourcesDirectory)
  - script: export PATH=$(Build.SourcesDirectory)/swift-4.2.1-ubuntu16.04/usr/bin:"\({PATH}"
  - script: swift build
